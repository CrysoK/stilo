# Generated by Django 5.2.3 on 2025-07-03 19:12

from django.db import migrations, models


def populate_prices(apps, schema_editor):
    """
    Rellena el campo amount para los turnos existentes
    usando el precio actual del servicio asociado.
    """
    Appointment = apps.get_model("core", "Appointment")
    # Usamos select_related para optimizar la consulta a la base de datos
    for appointment in Appointment.objects.all().select_related("service"):
        if appointment.service:
            appointment.amount = appointment.service.price
            # Usamos update_fields para solo actualizar este campo y no disparar otros hooks
            appointment.save(update_fields=["amount"])


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0006_alter_appointment_status"),
    ]

    operations = [
        # 1. Añade el campo con un default temporal. No puede ser NULL.
        migrations.AddField(
            model_name="appointment",
            name="amount",
            field=models.DecimalField(
                decimal_places=2,
                default=0,
                help_text="El precio del servicio en el momento de la reserva.",
                max_digits=8,
            ),
            preserve_default=False,  # Importante para que el default no se quede en el modelo
        ),
        # 2. Ejecuta el código Python para poblar los datos correctos
        migrations.RunPython(populate_prices, migrations.RunPython.noop),
    ]
